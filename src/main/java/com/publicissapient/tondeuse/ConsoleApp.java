/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.publicissapient.tondeuse;

import com.publicissapient.tondeuse.domain.PositionProvider;
import com.publicissapient.tondeuse.domain.configuration.Configuration;
import com.publicissapient.tondeuse.domain.configuration.errors.ConfigurationException;
import com.publicissapient.tondeuse.domain.configuration.errors.InvalidMoveEventArg;
import com.publicissapient.tondeuse.domain.configuration.providers.FileConfigurationProvider;
import com.publicissapient.tondeuse.service.MowerController;
import lombok.extern.slf4j.Slf4j;

@Slf4j
class ConsoleApp {

    private static final String FILE_CONF = "file.txt";

    private void run()  throws ConfigurationException {

        log.info("[ConsoleApp] Starting mower controller...");
        new MowerController()
                .load(Configuration.basedOn(FileConfigurationProvider.fromFileResource(FILE_CONF)))
                .withAlerter(ConsoleApp::notifyInvalidMove)
                .withResultPublisher(ConsoleApp::printMowerFinalLocation)
                .run();
    }

    /**
     * Entry point for the App
     * @param args args to be passed
     * @throws ConfigurationException thrown in case of configuration issue
     */
    public static void main(String[] args) throws ConfigurationException {
        new ConsoleApp().run();
    }

    /**
     * Handle invalid move notification (log)
     * @param x move attempted.
     */
    private static void notifyInvalidMove(InvalidMoveEventArg x) {
        if (log.isInfoEnabled())
            log.info("[Mower {} ] tried to reach invalid position at {}",
                    x.getMowerID().toString(), x.getTargetPosition().toString());
    }

    /**
     * handle final move notification (log)
     * @param x final position
     */
    private static void printMowerFinalLocation(PositionProvider x) {
        if (log.isInfoEnabled())
            log.info("[Mower {} ] Job complete : position is {}",
                    x.getId().toString(), x.getCurrentLocation().toString());
    }

}
